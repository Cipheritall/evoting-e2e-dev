#!groovy
/*
 * Copyright 2021 by Swiss Post, Information Technology Services
*
*/

@Library(['pipeline-library@master', 'evoting-pipeline@master']) _

def BUILD_INFO = Artifactory.newBuildInfo()
def PROJECT_NAME = 'evoting-e2e-dev'
def SCM_URL = "https://gitit.post.ch/scm/evotinginfrastructure/evoting-e2e-dev.git"
def SCM_URL_ANON = "https://gitit.post.ch/scm/evoting-anonymized/evoting-e2e-dev.git"

pipeline {

	agent {
		label 'apps-slaves-evoting'
	}

	options {
		disableConcurrentBuilds()
		buildDiscarder(logRotator(numToKeepStr: '10'))
		ansiColor('xterm')
		timestamps()
	}

	stages {

		stage('Prepare') {
			steps {
				step([$class: 'StashNotifier'])
				cleanWs()
				clone(
						branch: "develop",
						url: SCM_URL,
						credentialsId: "s-cicd-evoting")
			}
		}

		stage('Anonymize') {
			steps {
				anonymization(
						gitAnonymousUserName: "SwissPost-Bot",
						gitAnonymousUserEmail: "evotingspoc@poste.ch",
						fileToRemove: "JenkinsfileRelease,JenkinsfileK8s,JenkinsfileDocker,JenkinsfileAnonymizeDevelop,docker-compose.common-internal.yml,docker-compose.h2-internal.yml,docker-compose.oracle.yml,base-images,kubernetes,scripts,testdata-internal/");
			}
		}

		stage('push target branch') {
			steps {
				forcePush(
						branch: 'pre-publication-develop',
						url: SCM_URL_ANON,
						credentialsId: "s-cicd-evoting");
			}
		}

	}

	post {
		always {
			step([$class: 'StashNotifier'])
		}
		failure {
			sendBuildMail(projectName: PROJECT_NAME, message: 'Hi, the evoting-e2e-dev develop anonymization build has failed', onError: true, toCommitters: true)
		}
	}
}