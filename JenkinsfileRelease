#!groovy
/*
 * Copyright 2021 by Swiss Post, Information Technology Services
 *
 */

@Library(['pipeline-library@master', 'evoting-pipeline@master']) _

def BUILD_INFO = Artifactory.newBuildInfo()
def PROJECT_NAME = 'evoting-e2e-dev'
def SCM_URL = "https://gitit.post.ch/scm/evotinginfrastructure/evoting-e2e-dev.git"
def SCM_URL_ANON = "https://gitit.post.ch/scm/evoting-anonymized/evoting-e2e-dev.git"

pipeline {

	agent {
		label 'apps-slaves-evoting'
	}

	parameters {
		string(name: 'BRANCH_NAME', defaultValue: 'release/name', description: 'GIT branch where the release is starting. Default is "release/name". Change for testing purposes.')
		string(name: 'RELEASE_VERSION', defaultValue: '0.0.0.0', description: 'Set to the desired version to be released. Usually the Bugfix-Version number is bumped from the last RELEASE_VERSION eg 1.1.3.0 -> 1.1.4.0 You can get the last (tagged) RELEASE_VERSION with this cmd: git describe --abbrev=0 If you enter the value of an existing version, the Job will fail (due to duplicated tags)')
		string(name: 'RELEASE_MESSAGE', defaultValue: 'merge release evoting-e2e-dev', description: 'Set the release commit message')
		booleanParam(name: 'AUTO_MERGE', defaultValue: true, description: 'Auto merge given branch into master.')
	}

	options {
		disableConcurrentBuilds()
		buildDiscarder(logRotator(numToKeepStr: '10'))
		ansiColor('xterm')
		timestamps()
	}

	environment {
		releaseVersion = "${inputReleaseVersion == null ? params.RELEASE_VERSION : inputReleaseVersion}"
		releaseMessage = "${inputReleaseMessage == null ? params.RELEASE_MESSAGE : inputReleaseMessage}"
		releaseBranchName = "${inputBranchName == null ? params.BRANCH_NAME : inputBranchName}"
		regularRepositoryUrl = "${SCM_URL}"
		anonymizedRepositoryUrl = "${SCM_URL_ANON}"
		projectName = "${PROJECT_NAME}"
		masterBranchName = "master"
	}

	stages {

		stage('Prepare') {
			steps {
				script {
					currentBuild.displayName = "#${BUILD_INFO.number} : ${RELEASE_VERSION}"
					currentBuild.description = "Jenkins job to release the evoting-e2e-dev"

					cleanWs()
					clone(
							branch: BRANCH_NAME,
							url: SCM_URL,
							credentialsId: "s-cicd-evoting")
				}
			}
		}

		stage('Release') {
			steps {
				checkReleaseVersion(
						releaseVersion: releaseVersion,
						projectName: projectName)
				overwriteReleaseBranchToMaster(
						masterBranchName: masterBranchName,
						releaseBranch: releaseBranchName,
						releaseMessage: releaseMessage,
						tagName: "${projectName}-${releaseVersion}")
				push(
						branch: masterBranchName,
						url: regularRepositoryUrl,
						credentialsId: "s-cicd-evoting")
			}
		}

		stage('Anonymize') {
			steps {
				anonymization(
						gitAnonymousUserName: "SwissPost-Bot",
						gitAnonymousUserEmail: "evotingspoc@poste.ch",
						fileToRemove: "JenkinsfileRelease,JenkinsfileK8s,JenkinsfileDocker,JenkinsfileAnonymizeDevelop,docker-compose.common-internal.yml,docker-compose.h2-internal.yml,docker-compose.oracle.yml,base-images,kubernetes,scripts,testdata-internal/");
			}
		}

		stage('push target branch') {
			steps {
				forcePush(
						branch: 'pre-publication-master',
						url: SCM_URL_ANON,
						credentialsId: "s-cicd-evoting");
			}
		}

		stage('Build and push - base images on gitlab') {

			steps {

				withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'GITLAB_CRED_ID', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS']]) {
					sh "docker login -u ${GIT_USER} -p ${GIT_PASS} registry.gitlab.com"

					// RABBITMQ
					sh "docker build --build-arg DOCKER_REGISTRY=registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev --no-cache --force-rm -t registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/rabbitmq:3.7 -f ./base-images/rabbitmq.dockerfile ./base-images/"
					sh "docker push registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/rabbitmq:3.7"

					// JAVA
					sh "docker build --build-arg DOCKER_REGISTRY=registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev --no-cache --force-rm -t registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/java:1.8 -f ./base-images/published-base-images/java.dockerfile ./base-images"
					sh "docker push registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/java:1.8"

					// TOMCAT-NATIVE-LIBS
					sh "docker build --build-arg DOCKER_REGISTRY=registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev --no-cache --force-rm -t registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/tomcat-native-libs:1.2.30 -f ./base-images/published-base-images/tomcat-native-lib.dockerfile ./base-images"
					sh "docker push registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/tomcat-native-libs:1.2.30"

					// TOMEE
					sh "docker build --build-arg DOCKER_REGISTRY=registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev --no-cache --force-rm -t registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/tomee:8 -f ./base-images/published-base-images/tomee.dockerfile ./base-images"
					sh "docker push registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/tomee:8"

					// APACHE
					sh "docker build --build-arg DOCKER_REGISTRY=registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev --no-cache --force-rm -t registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/apache:2.4.37 -f ./base-images/apache.dockerfile ./base-images/"
					sh "docker push registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/apache:2.4.37"

					// TOMCAT
					sh "docker build --build-arg DOCKER_REGISTRY=registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev --no-cache --force-rm -t registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/tomcat:8.5.69 -f ./base-images/published-base-images/tomcat.dockerfile ./base-images"
					sh "docker push registry.gitlab.com/swisspost-evoting-int/e-voting/evoting-e2e-dev/ev/tomcat:8.5.69"
				}
			}
		}

	}

	post {
		failure {
			sendBuildMail(projectName: PROJECT_NAME, message: 'Hi, You broke the evoting-e2e-dev RELEASE build! Please check the problem.', onError: true, toCommitters: true)
		}
	}
}